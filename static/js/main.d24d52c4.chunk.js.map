{"version":3,"sources":["assets/sounds/brick.mp3","assets/sounds/wall.mp3","assets/textures/cross.jpg","store/gameStore.js","pages/Welcome.js","components/game/Box.js","store/levelStore.js","components/game/Tiles.js","components/game/Walls.js","components/game/Ball.js","components/game/Paddle.js","components/game/Lights.js","components/vfx/GlitchPass.js","components/vfx/Effect.js","pages/Game.js","pages/Levels.js","index.js"],"names":["module","exports","GAME_STATES","gameStore","setGameState","gameState","next","launchLevel","levelId","console","log","currentLevel","launchGame","resetGame","inGame","launchBall","ballLaunched","resetBall","balls","value","score","setGlitching","glitching","addScore","GameStore","instance","this","BehaviorSubject","Subject","Welcome","id","onClick","style","margin","Object","freeze","Box","position","size","userData","useState","setBalls","useLayoutEffect","subs","subscribe","unsubscribe","isWall","isNaN","strength","isCorner","particleSystem","setParticleSystem","soundAsset","wall","isRoof","brick","hitSound","UIFx","scene","useThree","useBox","type","args","map","x","onCollide","e","play","setTimeout","api","set","particles","THREE","pMaterial","color","transparent","depthTest","sizeAttenuation","opacity","p","pX","Math","random","ref","current","pY","y","pZ","z","particle","vertices","push","ps","customRotation","add","buildParticleSystem","useFrame","material","scale","rotation","key","receiveShadow","attach","LevelStore","buildLevel","tiles","LEVELS","layers","flat","levelStore","Tile","Tiles","setTiles","setCurrentLevel","useEffect","i","TILES","userDataType","Walls","BRICKS","side","ground","PI","corner","roof","Ball","setBallLaunched","useLoader","cross","useSphere","mass","state","mouse","velocity","castShadow","Paddle","sleepSpeedLimit","clampMouseMovement","diffCurrentPos","maxVelocity","isNeg","currentMousePosX","currentMousePosY","diffCurrentPosX","diffCurrentPosY","wireframe","Lights","useRef","shadow","camera","mapSize","width","height","intensity","shadow-camera-near","shadow-camera-far","DigitalGlitch","uniforms","tDiffuse","tDisp","byp","amount","angle","seed","seed_x","seed_y","distortion_x","distortion_y","col_s","vertexShader","fragmentShader","GlitchPass","dt_size","Pass","call","undefined","error","shader","UniformsUtils","clone","generateHeightmap","ShaderMaterial","OrthographicCamera","Scene","quad","Mesh","PlaneBufferGeometry","frustumCulled","factor","Effect","composer","gl","aspect","useMemo","setSize","render","attachArray","Game","setGameScore","PerspectiveCamera","shadowMap","iterations","tolerance","defaultContactMaterial","friction","restitution","gravity","allowSleep","prototype","assign","create","constructor","renderer","writeBuffer","readBuffer","deltaTime","maskActive","max","texture","_Math","randFloat","renderToScreen","setRenderTarget","clear","data_arr","Float32Array","length","val","DataTexture","RGBFormat","FloatType","needsUpdate","extend","EffectComposer","RenderPass","UnrealBloomPass","FilmPass","Level","Levels","level","ArkaReact","App","className","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d24d52c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brick.eed03f13.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wall.4c0964a4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cross.00397b42.jpg\";","import { Subject, BehaviorSubject } from 'rxjs';\n\nexport const GAME_STATES = { WELCOME: 0, LEVEL_CHOICE: 1, GAME: 2 };\nclass GameStore {\n  constructor() {\n    if (!GameStore.instance) {\n      GameStore.instance = this;\n      this.gameState = new BehaviorSubject(GAME_STATES.WELCOME);\n      this.balls = new BehaviorSubject(3);\n      this.score = new BehaviorSubject(0);\n      this.inGame = new Subject(false);\n      this.ballLaunched = new Subject(false);\n      this.currentLevel = new BehaviorSubject(1);\n      this.glitching = new Subject(false);\n    }\n\n    return GameStore.instance;\n  }\n  setGameState = (gameState) => {\n    this.gameState.next(gameState);\n  };\n  launchLevel = (levelId) => {\n    console.log(levelId);\n    this.currentLevel.next(levelId);\n    this.gameState.next(GAME_STATES.GAME);\n  };\n  launchGame = () => {\n    this.resetGame();\n    this.inGame.next(true);\n  };\n  launchBall = () => {\n    this.ballLaunched.next(true);\n  };\n  resetBall = () => {\n    this.balls.next(this.balls.value - 1);\n    this.ballLaunched.next(false);\n  };\n  resetGame = () => {\n    this.balls.next(3);\n    this.score.next(0);\n    this.inGame.next(false);\n    this.ballLaunched.next(false);\n  };\n  setGlitching = (value) => this.glitching.next(value);\n  addScore = (score) => this.score.next(this.score.value + score);\n}\n\nexport const gameStore = new GameStore();\nObject.freeze(gameStore);\n","import React from 'react';\n\nimport { gameStore, GAME_STATES } from '../store/gameStore';\n\nexport function Welcome() {\n  return (\n    <div\n      id=\"welcome\"\n      onClick={() => {\n        gameStore.setGameState(GAME_STATES.LEVEL_CHOICE);\n      }}\n      style={{ margin: 'auto' }}\n    >\n      Click to start\n    </div>\n  );\n}\n","import React, { useLayoutEffect, useState } from 'react';\n\nimport * as THREE from 'three';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport { useBox } from 'use-cannon';\n\nimport UIFx from 'uifx';\n\nimport brick from '../../assets/sounds/brick.mp3';\nimport wall from '../../assets/sounds/wall.mp3';\n\nimport { gameStore } from '../../store/gameStore';\n\nexport function Box({ position, size = [2, 2, 2], userData, id }) {\n  const [balls, setBalls] = useState(3);\n\n  useLayoutEffect(() => {\n    const subs = gameStore.balls.subscribe(setBalls);\n    return () => subs.unsubscribe();\n  }, []);\n\n  const isWall = isNaN(userData.strength);\n  const isCorner = isNaN(userData.isCorner);\n  const [particleSystem, setParticleSystem] = useState();\n\n  function buildParticleSystem() {\n    // create the particle variables\n    const particleCount = 25;\n    const particles = new THREE.Geometry();\n    const pMaterial = new THREE.PointsMaterial({\n      color: userData.color,\n      size: 0.9,\n      transparent: true,\n      depthTest: false,\n      sizeAttenuation: true,\n      opacity: 0.9,\n    });\n\n    // now create the individual particles\n    for (let p = 0; p < particleCount; p++) {\n      // create a particle with random\n      // position values, -250 -> 250\n      const pX = Math.random() * 2.5 - 1.25 + ref.current.position.x;\n      const pY = Math.random() * 2.5 - 1.25 + ref.current.position.y;\n      const pZ = Math.random() * 2.5 - 1.25 + ref.current.position.z;\n      const particle = new THREE.Vector3(pX, pY, pZ);\n      // add it to the geometry\n      particles.vertices.push(particle);\n    }\n\n    const ps = new THREE.Points(particles, pMaterial);\n    ps.customRotation = Math.random() * 2 - 1;\n    scene.add(ps);\n    return ps;\n  }\n\n  let soundAsset = null;\n  if (isWall) {\n    soundAsset = wall;\n  } else if (!userData.isRoof) {\n    soundAsset = brick;\n  }\n\n  const hitSound = new UIFx(soundAsset);\n\n  const { scene } = useThree();\n\n  const [ref, api] = useBox(() => {\n    return {\n      type: isCorner ? 'Static' : 'Kinematic',\n      args: size.map((x) => x / 2),\n      position,\n      userData: userData,\n      onCollide: (e) => {\n        hitSound.play();\n        if (!isWall) {\n          userData.strength--;\n          api.position.set(-1000, -1000, -100);\n          setParticleSystem(buildParticleSystem());\n          gameStore.addScore(userData.score);\n        } else if (userData.isRoof) {\n          gameStore.resetBall();\n          gameStore.setGlitching(true);\n          setTimeout(() => {\n            gameStore.setGlitching(false);\n            setBalls(balls - 1);\n          }, 300);\n        }\n      },\n    };\n  });\n\n  useFrame(() => {\n    if (particleSystem && particleSystem.material.opacity > 0) {\n      particleSystem.material.opacity -= 0.0075;\n      particleSystem.scale.x += 0.01;\n      particleSystem.scale.y += 0.01;\n      particleSystem.rotation.x += particleSystem.customRotation / 50;\n    }\n  });\n\n  return (\n    <mesh key={id} ref={ref} receiveShadow userData={userData}>\n      <boxGeometry attach=\"geometry\" args={size} />\n      <meshStandardMaterial attach=\"material\" color={userData.color} />\n    </mesh>\n  );\n}\n","import { BehaviorSubject } from 'rxjs';\nimport * as LEVELS from '../data/levels.json';\n\nclass LevelStore {\n  constructor() {\n    if (!LevelStore.instance) {\n      LevelStore.instance = this;\n      this.tiles = new BehaviorSubject([1, 2]);\n    }\n  }\n\n  buildLevel = (levelId) => {\n    this.tiles.next(LEVELS.levels[levelId].layers.flat());\n  };\n}\n\nexport const levelStore = new LevelStore();\nObject.freeze(LevelStore);\n","import React, { useEffect, useState } from 'react';\nimport { Box } from './Box.js';\n\nimport { tiles as TILES } from '../../data/gameBalanceData.json';\n\nimport { levelStore } from '../../store/levelStore';\nimport { gameStore } from '../../store/gameStore';\n\nfunction Tile({ position, userData }) {\n  return <Box position={position} userData={userData} />;\n}\n\nexport function Tiles() {\n  const [tiles, setTiles] = useState([]);\n  const [currentLevel, setCurrentLevel] = useState(gameStore.currentLevel.value);\n  useEffect(() => {\n    const subs = gameStore.currentLevel.subscribe(setCurrentLevel);\n    subs.add(levelStore.tiles.subscribe(setTiles));\n    levelStore.buildLevel(currentLevel);\n    return () => subs.unsubscribe();\n  }, [currentLevel]);\n  return tiles.map((brick, i) => (\n    <Tile key={i} position={brick.position} userData={TILES[brick.userDataType]} />\n  ));\n}\n","import React from 'react';\nimport { Box } from './Box.js';\n\nimport * as BRICKS from '../../data/gameBalanceData.json';\n\nexport function Walls() {\n  return (\n    <>\n      <Box position={[-12.5, 0, 0]} userData={BRICKS.walls.side} size={[1, 25, 130]} />\n      <Box position={[12.5, 0, 0]} userData={BRICKS.walls.side} size={[1, 25, 130]} />\n      <Box position={[0, 12.5, 0]} userData={BRICKS.walls.side} size={[25, 1, 130]} />\n      <Box position={[0, -12.5, 0]} userData={BRICKS.walls.side} size={[25, 1, 130]} />\n      <Box\n        position={[0, 0, -12.5]}\n        userData={BRICKS.walls.ground}\n        size={[25, 25, 1]}\n        rotation={Math.PI / 2}\n      />\n\n      <Box\n        position={[-12, -12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[-12, 12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[12, 12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[12, -12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[0, 12, -12]}\n        userData={BRICKS.walls.corner}\n        size={[130, 0.25, 0.25]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[0, -12, -12]}\n        userData={BRICKS.walls.corner}\n        size={[130, 0.25, 0.25]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[12, 0, -12]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 120, 0.25]}\n        rotation={Math.PI}\n      />\n      <Box\n        position={[-12, 0, -12]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 120, 0.25]}\n        rotation={Math.PI}\n      />\n      <Box\n        position={[0, 0, 45]}\n        userData={BRICKS.walls.roof}\n        size={[24, 24, 0.001]}\n        rotation={Math.PI / 2}\n      />\n    </>\n  );\n}\n","import React, { useState, useLayoutEffect } from 'react';\nimport { useSphere } from 'use-cannon';\nimport { useFrame, useLoader } from 'react-three-fiber';\n\nimport { gameStore } from '../../store/gameStore';\n\nimport * as THREE from 'three';\nimport cross from '../../assets/textures/cross.jpg';\nexport function Ball() {\n  const [ballLaunched, setBallLaunched] = useState(false);\n\n  useLayoutEffect(() => {\n    const subs = gameStore.ballLaunched.subscribe(setBallLaunched);\n    return () => subs.unsubscribe();\n  }, []);\n  const map = useLoader(THREE.TextureLoader, cross);\n  const [ref, api] = useSphere(() => ({\n    mass: 1,\n    args: 1,\n    position: [0, 0, 0],\n    onCollide: (e) => {},\n  }));\n  useFrame((state) => {\n    if (!ballLaunched) {\n      api.position.set(state.mouse.x * 10, state.mouse.y * 10, 17.6);\n      api.velocity.set(0, 0, 0, 1);\n    }\n  });\n  return (\n    <mesh castShadow receiveShadow ref={ref}>\n      <sphereBufferGeometry attach=\"geometry\" args={[0.5, 64, 64]} />\n      <meshStandardMaterial map={map} attach=\"material\" />\n    </mesh>\n  );\n}\n","import React from 'react';\n\nimport { useFrame } from 'react-three-fiber';\nimport { useSphere } from 'use-cannon';\n\nexport function Paddle() {\n  const [ref, api] = useSphere(() => ({\n    args: 1.3,\n    scale: [1, 1, 0.01],\n    position: [0, 0, 10],\n    sleepSpeedLimit: 4,\n    onCollide: (e) => {},\n  }));\n  function clampMouseMovement(diffCurrentPos, maxVelocity = 1) {\n    const isNeg = diffCurrentPos < 0;\n    let diffToAddX = 0;\n    if (isNeg) {\n      diffToAddX = diffCurrentPos < -maxVelocity ? -maxVelocity : diffCurrentPos;\n    } else {\n      diffToAddX = diffCurrentPos > maxVelocity ? maxVelocity : diffCurrentPos;\n    }\n    return diffToAddX;\n  }\n  useFrame((state) => {\n    // The paddle is kinematic (not subject to gravitation), we move it with the api returned by useBox\n    const currentMousePosX = state.mouse.x * 10;\n    const currentMousePosY = state.mouse.y * 10;\n    const diffCurrentPosX = currentMousePosX - ref.current.position.x;\n    const diffCurrentPosY = currentMousePosY - ref.current.position.y;\n\n    api.position.set(\n      ref.current.position.x + clampMouseMovement(diffCurrentPosX),\n      ref.current.position.y + clampMouseMovement(diffCurrentPosY),\n      18\n    );\n  });\n  return (\n    <>\n      <mesh ref={ref} castShadow>\n        <boxGeometry attach=\"geometry\" args={[5, 5, 1]} />\n        <meshBasicMaterial attach=\"material\" wireframe={true} color={'#FFF'} />\n      </mesh>\n    </>\n  );\n}\n","import React, { useRef, useLayoutEffect } from 'react';\nimport * as THREE from 'three';\nexport function Lights() {\n  const ref = useRef();\n  useLayoutEffect(() => {\n    ref.current.shadow.camera = new THREE.OrthographicCamera(-100, 100, 100, -100, 0.5, 100);\n    ref.current.shadow.mapSize.width = 2048;\n    ref.current.shadow.mapSize.height = 2048;\n  }, []);\n  return (\n    <>\n      <ambientLight intensity={0.75} />\n      <directionalLight\n        ref={ref}\n        position={[0, 0, 25]}\n        shadow-camera-near={0.1}\n        shadow-camera-far={1500}\n        castShadow\n      />\n    </>\n  );\n}\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nimport {\n  DataTexture,\n  FloatType,\n  Math as _Math,\n  Mesh,\n  OrthographicCamera,\n  PlaneBufferGeometry,\n  RGBFormat,\n  Scene,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass.js';\n\nvar DigitalGlitch = {\n  uniforms: {\n    tDiffuse: { value: null }, //diffuse texture\n    tDisp: { value: null }, //displacement texture for digital glitch squares\n    byp: { value: 0 }, //apply the glitch ?\n    amount: { value: 0.08 },\n    angle: { value: 0.02 },\n    seed: { value: 0.02 },\n    seed_x: { value: 0.02 }, //-1,1\n    seed_y: { value: 0.02 }, //-1,1\n    distortion_x: { value: 0.5 },\n    distortion_y: { value: 0.6 },\n    col_s: { value: 0.05 },\n  },\n\n  vertexShader: `varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }`,\n\n  fragmentShader: `uniform int byp; //should we apply the glitch\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDisp;\n    uniform float amount;\n    uniform float angle;\n    uniform float seed;\n    uniform float seed_x;\n    uniform float seed_y;\n    uniform float distortion_x;\n    uniform float distortion_y;\n    uniform float col_s;\n    varying vec2 vUv;\n    float rand(vec2 co){\n      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n    void main() {\n      if(byp<1) {\n        vec2 p = vUv;\n        float xs = floor(gl_FragCoord.x / 0.5);\n        float ys = floor(gl_FragCoord.y / 0.5);\n        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n        vec4 normal = texture2D (tDisp, p*seed*seed);\n        if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\n          if(seed_x>0.){\n            p.y = 1. - (p.y + distortion_y);\n          }\n          else {\n            p.y = distortion_y;\n          }\n        }\n        p.x+=normal.x*seed_x*(seed/5.);\n        p.y+=normal.y*seed_y*(seed/5.);\n        //base from RGB shift shader\n        vec2 offset = amount * vec2( cos(angle), sin(angle));\n        vec4 cr = texture2D(tDiffuse, p + offset);\n        vec4 cga = texture2D(tDiffuse, p);\n        vec4 cb = texture2D(tDiffuse, p - offset);\n        gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        //add noise\n        vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.05);\n        gl_FragColor = gl_FragColor+ snow;\n      }\n      else {\n        gl_FragColor=texture2D (tDiffuse, vUv);\n      }\n    }`,\n};\n\nvar GlitchPass = function (dt_size) {\n  Pass.call(this);\n  if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on THREE.DigitalGlitch');\n  var shader = DigitalGlitch;\n  this.uniforms = UniformsUtils.clone(shader.uniforms);\n  if (dt_size === undefined) dt_size = 64;\n  this.uniforms['tDisp'].value = this.generateHeightmap(dt_size);\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader,\n  });\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this.scene = new Scene();\n  this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null);\n  this.quad.frustumCulled = false; // Avoid getting clipped\n  this.scene.add(this.quad);\n  this.factor = 0;\n};\n\nGlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: GlitchPass,\n\n  render: function (renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    const factor = Math.max(0, this.factor);\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['seed'].value = Math.random() * factor; //default seeding\n    this.uniforms['byp'].value = 0;\n    if (factor) {\n      this.uniforms['amount'].value = (Math.random() / 90) * factor;\n      this.uniforms['angle'].value = _Math.randFloat(-Math.PI, Math.PI) * factor;\n      this.uniforms['distortion_x'].value = _Math.randFloat(0, 1) * factor;\n      this.uniforms['distortion_y'].value = _Math.randFloat(0, 1) * factor;\n      this.uniforms['seed_x'].value = _Math.randFloat(-0.3, 0.3) * factor;\n      this.uniforms['seed_y'].value = _Math.randFloat(-0.3, 0.3) * factor;\n    } else this.uniforms['byp'].value = 1;\n    this.quad.material = this.material;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      renderer.render(this.scene, this.camera);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      renderer.render(this.scene, this.camera);\n    }\n  },\n\n  generateHeightmap: function (dt_size) {\n    var data_arr = new Float32Array(dt_size * dt_size * 3);\n    var length = dt_size * dt_size;\n\n    for (var i = 0; i < length; i++) {\n      var val = _Math.randFloat(0, 1);\n      data_arr[i * 3 + 0] = val;\n      data_arr[i * 3 + 1] = val;\n      data_arr[i * 3 + 2] = val;\n    }\n\n    var texture = new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType);\n    texture.needsUpdate = true;\n    return texture;\n  },\n});\n\nexport { GlitchPass };\n","import React, { useRef, useLayoutEffect, useState, useMemo, useEffect } from 'react';\nimport { useFrame, useThree, extend } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\n\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\n\nimport { GlitchPass } from './GlitchPass';\n\nimport { gameStore } from '../../store/gameStore';\n\nextend({ EffectComposer, RenderPass, UnrealBloomPass, FilmPass, GlitchPass });\n\nexport function Effect(camera) {\n  const [glitching, setGlitching] = useState(false);\n  useLayoutEffect(() => {\n    const subs = gameStore.glitching.subscribe(setGlitching);\n    return () => subs.unsubscribe();\n  }, []);\n  const composer = useRef();\n  const { scene, gl, size } = useThree();\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [size]);\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size]);\n  useFrame(() => composer.current.render(), 1);\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera.camera} />\n      <unrealBloomPass attachArray=\"passes\" args={[aspect, 0.25, 0.2, 0]} />\n      <glitchPass attachArray=\"passes\" factor={glitching ? 1 : 0} />\n      <filmPass attachArray=\"passes\" args={[0.35, 0.6, 1500, false]} />\n    </effectComposer>\n  );\n}\n","import React, { useMemo, useState, useLayoutEffect } from 'react';\n\nimport { Canvas } from 'react-three-fiber';\nimport { Physics } from 'use-cannon';\n\nimport { gameStore } from '../store/gameStore';\n\nimport { Tiles } from '../components/game/Tiles';\nimport { Walls } from '../components/game/Walls';\nimport { Ball } from '../components/game/Ball';\nimport { Paddle } from '../components/game/Paddle';\nimport { Lights } from '../components/game/Lights';\nimport { Effect } from '../components/vfx/Effect';\n\nimport { PerspectiveCamera } from 'three';\n\nexport function Game() {\n  const [balls, setBalls] = useState(3);\n  const [ballLaunched, setBallLaunched] = useState(false);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [score, setGameScore] = useState(0);\n\n  useLayoutEffect(() => {\n    const subs = gameStore.balls.subscribe(setBalls);\n    subs.add(gameStore.currentLevel.subscribe(setCurrentLevel));\n    subs.add(gameStore.ballLaunched.subscribe(setBallLaunched));\n    subs.add(gameStore.score.subscribe(setGameScore));\n    return () => subs.unsubscribe();\n  }, []);\n\n  const camera = useMemo(() => {\n    const camera = new PerspectiveCamera(45, 1, 1, 57);\n    camera.position.set(0, 0, 45);\n    return camera;\n  }, []);\n\n  function handleClick() {\n    if (balls < 0) {\n      gameStore.resetGame();\n    } else if (!ballLaunched) {\n      gameStore.launchBall();\n    } else {\n      setBalls(balls - 1);\n    }\n  }\n\n  return (\n    <>\n      <div id=\"game\" onClick={handleClick}>\n        {balls >= 0 ? (\n          <div id=\"canvas\">\n            <Canvas shadowMap camera={camera}>\n              <Lights />\n              <Physics\n                iterations={20}\n                tolerance={0.0001}\n                defaultContactMaterial={{\n                  friction: 0,\n                  restitution: 1,\n                }}\n                gravity={[0, 0, 0]}\n                allowSleep={false}\n              >\n                <Walls />\n                <Tiles />\n                <Paddle />\n                <Ball />\n                <Effect camera={camera} />\n              </Physics>\n            </Canvas>\n          </div>\n        ) : (\n          <div>\n            <p>Game Over</p>\n            <p>Click to restart</p>\n          </div>\n        )}\n        <div id=\"hud\">\n          <p>Balls: {balls}</p>\n          <p>Level: {currentLevel}</p>\n          <p>Score: {score}</p>\n          <p onClick={gameStore.resetGame}>Click to restart</p>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport * as LEVELS from '../data/levels.json';\nimport { gameStore } from '../store/gameStore';\n\nconst Level = ({ levelId }) => {\n  return (\n    <div>\n      <h2>{levelId} - Score: </h2>\n      <button\n        onClick={() => {\n          gameStore.launchLevel(levelId);\n        }}\n      >\n        Play\n      </button>\n    </div>\n  );\n};\nexport const Levels = () => {\n  return (\n    <>\n      <div>\n        <h1>LEVELS</h1>\n      </div>\n      <div>\n        {LEVELS.levels.map((level, i) => (\n          <Level key={level.id} levelId={i} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React, { useState, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { gameStore, GAME_STATES } from './store/gameStore';\n\nimport { Welcome } from './pages/Welcome';\nimport { Game } from './pages/Game';\nimport { Levels } from './pages/Levels';\n\nimport './styles.css';\n\nconst ArkaReact = ({ gameState }) => {\n  switch (gameState) {\n    case GAME_STATES.WELCOME:\n      return <Welcome />;\n    case GAME_STATES.LEVEL_CHOICE:\n      return <Levels />;\n    case GAME_STATES.GAME:\n      return <Game />;\n    default:\n      return <Welcome />;\n  }\n};\n\nexport default function App() {\n  const [gameState, setGameState] = useState(GAME_STATES.WELCOME);\n  useLayoutEffect(() => {\n    const subs = gameStore.gameState.subscribe(setGameState);\n\n    return () => subs.unsubscribe();\n  }, []);\n\n  return (\n    <div className=\"main\">\n      <ArkaReact gameState={gameState} />\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}