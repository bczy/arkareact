{"version":3,"sources":["assets/sounds/brick.mp3","assets/sounds/wall.mp3","assets/textures/cross.jpg","store/gameStore.js","data/stores/level.js","pages/Welcome.js","components/game/Box.js","components/game/Tiles.js","components/game/Walls.js","components/game/Ball.js","components/game/Paddle.js","components/game/Lights.js","components/vfx/GlitchPass.js","components/vfx/Effect.js","pages/Game.js","index.js"],"names":["module","exports","gameStore","launchGame","inGame","next","launchBall","ballLaunched","resetBall","setGlitching","value","glitching","GameStore","instance","console","log","this","balls","Subject","currentLevel","score","tiles","Object","freeze","create","set","get","getTiles","buildLevel","useLevelStore","Welcome","useEffect","LEVELS","layers","flat","id","onClick","style","margin","Box","position","size","userData","useState","setBalls","useLayoutEffect","subs","subscribe","unsubscribe","isWall","isNaN","strength","isCorner","particleSystem","setParticleSystem","soundAsset","wall","isRoof","brick","hitSound","UIFx","scene","useThree","useBox","type","args","map","x","onCollide","e","play","setTimeout","api","particles","THREE","pMaterial","color","transparent","depthTest","sizeAttenuation","opacity","p","pX","Math","random","ref","current","pY","y","pZ","z","particle","vertices","push","ps","customRotation","add","buildParticleSystem","useFrame","material","scale","rotation","key","receiveShadow","attach","Tile","Tiles","i","TILES","userDataType","Walls","BRICKS","side","ground","PI","corner","roof","Ball","setBallLaunched","useLoader","cross","useSphere","mass","state","mouse","velocity","castShadow","Paddle","sleepSpeedLimit","clampMouseMovement","diffCurrentPos","maxVelocity","isNeg","currentMousePosX","currentMousePosY","diffCurrentPosX","diffCurrentPosY","wireframe","Lights","useRef","shadow","camera","mapSize","width","height","intensity","shadow-camera-near","shadow-camera-far","DigitalGlitch","uniforms","tDiffuse","tDisp","byp","amount","angle","seed","seed_x","seed_y","distortion_x","distortion_y","col_s","vertexShader","fragmentShader","GlitchPass","dt_size","Pass","call","undefined","error","shader","UniformsUtils","clone","generateHeightmap","ShaderMaterial","OrthographicCamera","Scene","quad","Mesh","PlaneBufferGeometry","frustumCulled","factor","Effect","composer","gl","aspect","useMemo","setSize","render","attachArray","Game","setCurrentLevel","PerspectiveCamera","resetGame","shadowMap","iterations","tolerance","defaultContactMaterial","friction","restitution","gravity","allowSleep","prototype","assign","constructor","renderer","writeBuffer","readBuffer","deltaTime","maskActive","max","texture","_Math","randFloat","renderToScreen","setRenderTarget","clear","data_arr","Float32Array","length","val","DataTexture","RGBFormat","FloatType","needsUpdate","extend","EffectComposer","RenderPass","UnrealBloomPass","FilmPass","App","setInGame","className","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1065ea74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brick.eed03f13.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wall.4c0964a4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cross.00397b42.jpg\";","import { Subject } from 'rxjs';\nexport const initialBallCount = 3;\n\nclass GameStore {\n  constructor() {\n    if (!GameStore.instance) {\n      console.log('init gamestore...');\n      GameStore.instance = this;\n      this.balls = new Subject(3);\n      this.inGame = new Subject(false);\n      this.ballLaunched = new Subject(false);\n      this.currentLevel = new Subject(1);\n      this.score = new Subject(0);\n      this.tiles = new Subject([]);\n      this.glitching = new Subject(false);\n    }\n\n    return GameStore.instance;\n  }\n  launchGame = () => {\n    this.inGame.next(true);\n  };\n  launchBall = () => {\n    this.ballLaunched.next(true);\n  };\n  resetBall = () => {\n    this.ballLaunched.next(false);\n  };\n  setGlitching = (value) => this.glitching.next(value);\n}\n\nexport const gameStore = new GameStore();\nObject.freeze(gameStore);\n","import create from 'zustand';\n\nexport const [useLevelStore] = create((set, get) => ({\n  tiles: [],\n  getTiles: () => get().tiles,\n  buildLevel: (tiles) => {\n    set(() => ({ tiles: tiles }));\n  },\n}));\n","import React, { useEffect } from 'react';\n\nimport { gameStore } from '../store/gameStore';\nimport { useLevelStore } from '../data/stores/level';\n\nimport * as LEVELS from '../data/levels/levels.json';\n\nexport function Welcome() {\n  const { buildLevel } = useLevelStore();\n\n  useEffect(() => {\n    buildLevel(LEVELS.levels[0].layers.flat());\n  }, [buildLevel]);\n\n  return (\n    <div id=\"welcome\" onClick={gameStore.launchGame} style={{ margin: 'auto' }}>\n      Click to start\n    </div>\n  );\n}\n","import React, { useLayoutEffect, useState } from 'react';\n\nimport * as THREE from 'three';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport { useBox } from 'use-cannon';\n\nimport UIFx from 'uifx';\n\nimport brick from '../../assets/sounds/brick.mp3';\nimport wall from '../../assets/sounds/wall.mp3';\n\nimport { gameStore } from '../../store/gameStore';\n\nexport function Box({ position, size = [2, 2, 2], userData, id }) {\n  const [balls, setBalls] = useState(3);\n\n  useLayoutEffect(() => {\n    const subs = gameStore.balls.subscribe(setBalls);\n    return () => subs.unsubscribe();\n  }, []);\n\n  const isWall = isNaN(userData.strength);\n  const isCorner = isNaN(userData.isCorner);\n  const [particleSystem, setParticleSystem] = useState();\n\n  function buildParticleSystem() {\n    // create the particle variables\n    const particleCount = 25;\n    const particles = new THREE.Geometry();\n    const pMaterial = new THREE.PointsMaterial({\n      color: userData.color,\n      size: 0.9,\n      transparent: true,\n      depthTest: false,\n      sizeAttenuation: true,\n      opacity: 0.9,\n    });\n\n    // now create the individual particles\n    for (let p = 0; p < particleCount; p++) {\n      // create a particle with random\n      // position values, -250 -> 250\n      const pX = Math.random() * 2.5 - 1.25 + ref.current.position.x;\n      const pY = Math.random() * 2.5 - 1.25 + ref.current.position.y;\n      const pZ = Math.random() * 2.5 - 1.25 + ref.current.position.z;\n      const particle = new THREE.Vector3(pX, pY, pZ);\n      // add it to the geometry\n      particles.vertices.push(particle);\n    }\n\n    const ps = new THREE.Points(particles, pMaterial);\n    ps.customRotation = Math.random() * 2 - 1;\n    scene.add(ps);\n    return ps;\n  }\n\n  let soundAsset = null;\n  if (isWall) {\n    soundAsset = wall;\n  } else if (!userData.isRoof) {\n    soundAsset = brick;\n  }\n\n  const hitSound = new UIFx(soundAsset);\n\n  const { scene } = useThree();\n\n  const [ref, api] = useBox(() => {\n    return {\n      type: isCorner ? 'Static' : 'Kinematic',\n      args: size.map((x) => x / 2),\n      position,\n      userData: userData,\n      onCollide: (e) => {\n        hitSound.play();\n        if (!isWall) {\n          userData.strength--;\n          api.position.set(-1000, -1000, -100);\n          setParticleSystem(buildParticleSystem());\n        } else if (userData.isRoof) {\n          gameStore.resetBall();\n          gameStore.setGlitching(true);\n          setTimeout(() => {\n            gameStore.setGlitching(false);\n            setBalls(balls - 1);\n          }, 300);\n        }\n      },\n    };\n  });\n\n  useFrame(() => {\n    if (particleSystem && particleSystem.material.opacity > 0) {\n      particleSystem.material.opacity -= 0.0075;\n      particleSystem.scale.x += 0.01;\n      particleSystem.scale.y += 0.01;\n      particleSystem.rotation.x += particleSystem.customRotation / 50;\n    }\n  });\n\n  return (\n    <mesh key={id} ref={ref} receiveShadow userData={userData}>\n      <boxGeometry attach=\"geometry\" args={size} />\n      <meshStandardMaterial attach=\"material\" color={userData.color} />\n    </mesh>\n  );\n}\n","import React from 'react';\nimport { Box } from './Box.js';\n\nimport { useLevelStore } from '../../data/stores/level';\nimport { tiles as TILES } from '../../data/gameBalanceData.json';\n\nfunction Tile({ position, userData }) {\n  return <Box position={position} userData={userData} />;\n}\n\nexport function Tiles() {\n  const { getTiles } = useLevelStore();\n  return getTiles().map((brick, i) => (\n    <Tile key={i} position={brick.position} userData={TILES[brick.userDataType]} />\n  ));\n}\n","import React from 'react';\nimport { Box } from './Box.js';\n\nimport * as BRICKS from '../../data/gameBalanceData.json';\n\nexport function Walls() {\n  return (\n    <>\n      <Box position={[-12.5, 0, 0]} userData={BRICKS.walls.side} size={[1, 25, 130]} />\n      <Box position={[12.5, 0, 0]} userData={BRICKS.walls.side} size={[1, 25, 130]} />\n      <Box position={[0, 12.5, 0]} userData={BRICKS.walls.side} size={[25, 1, 130]} />\n      <Box position={[0, -12.5, 0]} userData={BRICKS.walls.side} size={[25, 1, 130]} />\n      <Box\n        position={[0, 0, -12.5]}\n        userData={BRICKS.walls.ground}\n        size={[25, 25, 1]}\n        rotation={Math.PI / 2}\n      />\n\n      <Box\n        position={[-12, -12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[-12, 12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[12, 12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[12, -12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[0, 12, -12]}\n        userData={BRICKS.walls.corner}\n        size={[130, 0.25, 0.25]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[0, -12, -12]}\n        userData={BRICKS.walls.corner}\n        size={[130, 0.25, 0.25]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[12, 0, -12]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 120, 0.25]}\n        rotation={Math.PI}\n      />\n      <Box\n        position={[-12, 0, -12]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 120, 0.25]}\n        rotation={Math.PI}\n      />\n      <Box\n        position={[0, 0, 45]}\n        userData={BRICKS.walls.roof}\n        size={[24, 24, 0.001]}\n        rotation={Math.PI / 2}\n      />\n    </>\n  );\n}\n","import React, { useState, useLayoutEffect } from 'react';\nimport { useSphere } from 'use-cannon';\nimport { useFrame, useLoader } from 'react-three-fiber';\n\nimport { gameStore } from '../../store/gameStore';\n\nimport * as THREE from 'three';\nimport cross from '../../assets/textures/cross.jpg';\nexport function Ball() {\n  const [ballLaunched, setBallLaunched] = useState(false);\n\n  useLayoutEffect(() => {\n    const subs = gameStore.ballLaunched.subscribe(setBallLaunched);\n    return () => subs.unsubscribe();\n  }, []);\n  const map = useLoader(THREE.TextureLoader, cross);\n  const [ref, api] = useSphere(() => ({\n    mass: 1,\n    args: 1,\n    position: [0, 0, 0],\n    onCollide: (e) => {},\n  }));\n  useFrame((state) => {\n    if (!ballLaunched) {\n      api.position.set(state.mouse.x * 10, state.mouse.y * 10, 17.6);\n      api.velocity.set(0, 0, 0, 1);\n    }\n  });\n  return (\n    <mesh castShadow receiveShadow ref={ref}>\n      <sphereBufferGeometry attach=\"geometry\" args={[0.5, 64, 64]} />\n      <meshStandardMaterial map={map} attach=\"material\" />\n    </mesh>\n  );\n}\n","import React from 'react';\n\nimport { useFrame } from 'react-three-fiber';\nimport { useSphere } from 'use-cannon';\n\nexport function Paddle() {\n  const [ref, api] = useSphere(() => ({\n    args: 1.3,\n    scale: [1, 1, 0.01],\n    position: [0, 0, 10],\n    sleepSpeedLimit: 4,\n    onCollide: (e) => {},\n  }));\n  function clampMouseMovement(diffCurrentPos, maxVelocity = 1) {\n    const isNeg = diffCurrentPos < 0;\n    let diffToAddX = 0;\n    if (isNeg) {\n      diffToAddX = diffCurrentPos < -maxVelocity ? -maxVelocity : diffCurrentPos;\n    } else {\n      diffToAddX = diffCurrentPos > maxVelocity ? maxVelocity : diffCurrentPos;\n    }\n    return diffToAddX;\n  }\n  useFrame((state) => {\n    // The paddle is kinematic (not subject to gravitation), we move it with the api returned by useBox\n    const currentMousePosX = state.mouse.x * 10;\n    const currentMousePosY = state.mouse.y * 10;\n    const diffCurrentPosX = currentMousePosX - ref.current.position.x;\n    const diffCurrentPosY = currentMousePosY - ref.current.position.y;\n\n    api.position.set(\n      ref.current.position.x + clampMouseMovement(diffCurrentPosX),\n      ref.current.position.y + clampMouseMovement(diffCurrentPosY),\n      18\n    );\n  });\n  return (\n    <>\n      <mesh ref={ref} castShadow>\n        <boxGeometry attach=\"geometry\" args={[5, 5, 1]} />\n        <meshBasicMaterial attach=\"material\" wireframe={true} color={'#FFF'} />\n      </mesh>\n    </>\n  );\n}\n","import React, { useRef, useLayoutEffect } from 'react';\nimport * as THREE from 'three';\nexport function Lights() {\n  const ref = useRef();\n  useLayoutEffect(() => {\n    ref.current.shadow.camera = new THREE.OrthographicCamera(-100, 100, 100, -100, 0.5, 100);\n    ref.current.shadow.mapSize.width = 2048;\n    ref.current.shadow.mapSize.height = 2048;\n  }, []);\n  return (\n    <>\n      <ambientLight intensity={0.75} />\n      <directionalLight\n        ref={ref}\n        position={[0, 0, 25]}\n        shadow-camera-near={0.1}\n        shadow-camera-far={1500}\n        castShadow\n      />\n    </>\n  );\n}\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nimport {\n  DataTexture,\n  FloatType,\n  Math as _Math,\n  Mesh,\n  OrthographicCamera,\n  PlaneBufferGeometry,\n  RGBFormat,\n  Scene,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass.js';\n\nvar DigitalGlitch = {\n  uniforms: {\n    tDiffuse: { value: null }, //diffuse texture\n    tDisp: { value: null }, //displacement texture for digital glitch squares\n    byp: { value: 0 }, //apply the glitch ?\n    amount: { value: 0.08 },\n    angle: { value: 0.02 },\n    seed: { value: 0.02 },\n    seed_x: { value: 0.02 }, //-1,1\n    seed_y: { value: 0.02 }, //-1,1\n    distortion_x: { value: 0.5 },\n    distortion_y: { value: 0.6 },\n    col_s: { value: 0.05 },\n  },\n\n  vertexShader: `varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }`,\n\n  fragmentShader: `uniform int byp; //should we apply the glitch\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDisp;\n    uniform float amount;\n    uniform float angle;\n    uniform float seed;\n    uniform float seed_x;\n    uniform float seed_y;\n    uniform float distortion_x;\n    uniform float distortion_y;\n    uniform float col_s;\n    varying vec2 vUv;\n    float rand(vec2 co){\n      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n    void main() {\n      if(byp<1) {\n        vec2 p = vUv;\n        float xs = floor(gl_FragCoord.x / 0.5);\n        float ys = floor(gl_FragCoord.y / 0.5);\n        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n        vec4 normal = texture2D (tDisp, p*seed*seed);\n        if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\n          if(seed_x>0.){\n            p.y = 1. - (p.y + distortion_y);\n          }\n          else {\n            p.y = distortion_y;\n          }\n        }\n        p.x+=normal.x*seed_x*(seed/5.);\n        p.y+=normal.y*seed_y*(seed/5.);\n        //base from RGB shift shader\n        vec2 offset = amount * vec2( cos(angle), sin(angle));\n        vec4 cr = texture2D(tDiffuse, p + offset);\n        vec4 cga = texture2D(tDiffuse, p);\n        vec4 cb = texture2D(tDiffuse, p - offset);\n        gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        //add noise\n        vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.05);\n        gl_FragColor = gl_FragColor+ snow;\n      }\n      else {\n        gl_FragColor=texture2D (tDiffuse, vUv);\n      }\n    }`,\n};\n\nvar GlitchPass = function (dt_size) {\n  Pass.call(this);\n  if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on THREE.DigitalGlitch');\n  var shader = DigitalGlitch;\n  this.uniforms = UniformsUtils.clone(shader.uniforms);\n  if (dt_size === undefined) dt_size = 64;\n  this.uniforms['tDisp'].value = this.generateHeightmap(dt_size);\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader,\n  });\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this.scene = new Scene();\n  this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null);\n  this.quad.frustumCulled = false; // Avoid getting clipped\n  this.scene.add(this.quad);\n  this.factor = 0;\n};\n\nGlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: GlitchPass,\n\n  render: function (renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    const factor = Math.max(0, this.factor);\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['seed'].value = Math.random() * factor; //default seeding\n    this.uniforms['byp'].value = 0;\n    if (factor) {\n      this.uniforms['amount'].value = (Math.random() / 90) * factor;\n      this.uniforms['angle'].value = _Math.randFloat(-Math.PI, Math.PI) * factor;\n      this.uniforms['distortion_x'].value = _Math.randFloat(0, 1) * factor;\n      this.uniforms['distortion_y'].value = _Math.randFloat(0, 1) * factor;\n      this.uniforms['seed_x'].value = _Math.randFloat(-0.3, 0.3) * factor;\n      this.uniforms['seed_y'].value = _Math.randFloat(-0.3, 0.3) * factor;\n    } else this.uniforms['byp'].value = 1;\n    this.quad.material = this.material;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      renderer.render(this.scene, this.camera);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      renderer.render(this.scene, this.camera);\n    }\n  },\n\n  generateHeightmap: function (dt_size) {\n    var data_arr = new Float32Array(dt_size * dt_size * 3);\n    var length = dt_size * dt_size;\n\n    for (var i = 0; i < length; i++) {\n      var val = _Math.randFloat(0, 1);\n      data_arr[i * 3 + 0] = val;\n      data_arr[i * 3 + 1] = val;\n      data_arr[i * 3 + 2] = val;\n    }\n\n    var texture = new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType);\n    texture.needsUpdate = true;\n    return texture;\n  },\n});\n\nexport { GlitchPass };\n","import React, { useRef, useLayoutEffect, useState, useMemo, useEffect } from 'react';\nimport { useFrame, useThree, extend } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\n\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\n\nimport { GlitchPass } from './GlitchPass';\n\nimport { gameStore } from '../../store/gameStore';\n\nextend({ EffectComposer, RenderPass, UnrealBloomPass, FilmPass, GlitchPass });\n\nexport function Effect(camera) {\n  const [glitching, setGlitching] = useState(false);\n  useLayoutEffect(() => {\n    const subs = gameStore.glitching.subscribe(setGlitching);\n    return () => subs.unsubscribe();\n  }, []);\n  const composer = useRef();\n  const { scene, gl, size } = useThree();\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [size]);\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size]);\n  useFrame(() => composer.current.render(), 1);\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera.camera} />\n      <unrealBloomPass attachArray=\"passes\" args={[aspect, 0.25, 0.2, 0]} />\n      <glitchPass attachArray=\"passes\" factor={glitching ? 1 : 0} />\n      <filmPass attachArray=\"passes\" args={[0.35, 0.6, 1500, false]} />\n    </effectComposer>\n  );\n}\n","import React, { useMemo, useState, useLayoutEffect } from 'react';\n\nimport { Canvas } from 'react-three-fiber';\nimport { Physics } from 'use-cannon';\n\nimport { gameStore } from '../store/gameStore';\n\nimport { Tiles } from '../components/game/Tiles';\nimport { Walls } from '../components/game/Walls';\nimport { Ball } from '../components/game/Ball';\nimport { Paddle } from '../components/game/Paddle';\nimport { Lights } from '../components/game/Lights';\nimport { Effect } from '../components/vfx/Effect';\n\nimport { PerspectiveCamera } from 'three';\n\nexport function Game() {\n  const [balls, setBalls] = useState(3);\n  const [ballLaunched, setBallLaunched] = useState(false);\n  const [currentLevel, setCurrentLevel] = useState(1);\n\n  useLayoutEffect(() => {\n    const subs = gameStore.balls.subscribe(setBalls);\n    subs.add(gameStore.currentLevel.subscribe(setCurrentLevel));\n    subs.add(gameStore.ballLaunched.subscribe(setBallLaunched));\n    return () => subs.unsubscribe();\n  }, []);\n\n  const camera = useMemo(() => {\n    const camera = new PerspectiveCamera(45, 1, 1, 57);\n    camera.position.set(0, 0, 45);\n    return camera;\n  }, []);\n\n  function handleClick() {\n    if (balls < 0) {\n      gameStore.resetGame();\n    } else if (!ballLaunched) {\n      gameStore.launchBall();\n    }\n  }\n\n  return (\n    <>\n      <div id=\"game\" onClick={handleClick}>\n        {balls >= 0 ? (\n          <div id=\"canvas\">\n            <Canvas shadowMap camera={camera}>\n              <Lights />\n              <Physics\n                iterations={20}\n                tolerance={0.0001}\n                defaultContactMaterial={{\n                  friction: 0,\n                  restitution: 1,\n                }}\n                gravity={[0, 0, 0]}\n                allowSleep={false}\n              >\n                <Walls />\n                <Tiles />\n                <Paddle />\n                <Ball />\n                <Effect camera={camera} />\n              </Physics>\n            </Canvas>\n          </div>\n        ) : (\n          <div>\n            <p>Game Over</p>\n            <p>Click to restart</p>\n          </div>\n        )}\n        <div id=\"hud\">\n          <p>Balls: {balls}</p>\n          <p>Level: {currentLevel}</p>\n          <p onClick={gameStore.resetGame}>Click to restart</p>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Welcome } from './pages/Welcome';\nimport { Game } from './pages/Game';\nimport { gameStore } from './store/gameStore';\n\nimport './styles.css';\n\nexport default function App() {\n  const [inGame, setInGame] = useState(false);\n  useLayoutEffect(() => {\n    const subs = gameStore.inGame.subscribe(setInGame);\n\n    return () => subs.unsubscribe();\n  }, []);\n\n  return <div className=\"main\">{!inGame ? <Welcome /> : <Game />}</div>;\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}