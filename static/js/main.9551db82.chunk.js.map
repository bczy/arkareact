{"version":3,"sources":["assets/sounds/gameOver.mp3","assets/sounds/tryAgain.mp3","assets/sounds/brick.mp3","assets/sounds/wall.mp3","assets/textures/cross.jpg","data/stores/game.js","data/stores/level.js","pages/Welcome.js","data/game-context.js","components/game/Box.js","components/game/Tiles.js","components/game/Walls.js","components/game/Ball.js","components/game/Paddle.js","components/game/Lights.js","components/vfx/GlitchPass.js","components/vfx/Effect.js","pages/Game.js","index.js"],"names":["module","exports","create","set","get","score","balls","inGame","ballLaunched","currentLevel","launchBall","launchGame","resetGame","resetBall","getRemainingBalls","addScore","state","retrieveBall","Audio","tryAgain","play","gameOver","useGameStore","tiles","getTiles","buildLevel","useLevelStore","Welcome","useEffect","LEVELS","layers","flat","id","onClick","style","margin","GameContext","React","createContext","glitching","setGlitching","Box","position","size","userData","useContext","isWall","isNaN","strength","isCorner","useState","particleSystem","setParticleSystem","soundAsset","wall","isRoof","brick","hitSound","UIFx","scene","useThree","useBox","type","args","map","x","onCollide","e","setTimeout","api","particles","THREE","pMaterial","color","transparent","depthTest","sizeAttenuation","opacity","p","pX","Math","random","ref","current","pY","y","pZ","z","particle","vertices","push","ps","customRotation","add","buildParticleSystem","useFrame","material","scale","rotation","key","receiveShadow","attach","Tile","Tiles","i","TILES","userDataType","Walls","BRICKS","side","ground","PI","corner","roof","Ball","useLoader","cross","useSphere","mass","mouse","velocity","castShadow","Paddle","sleepSpeedLimit","clampMouseMovement","diffCurrentPos","maxVelocity","isNeg","currentMousePosX","currentMousePosY","diffCurrentPosX","diffCurrentPosY","wireframe","Lights","useRef","useLayoutEffect","shadow","camera","mapSize","width","height","intensity","shadow-camera-near","shadow-camera-far","DigitalGlitch","uniforms","tDiffuse","value","tDisp","byp","amount","angle","seed","seed_x","seed_y","distortion_x","distortion_y","col_s","vertexShader","fragmentShader","GlitchPass","dt_size","Pass","call","this","undefined","console","error","shader","UniformsUtils","clone","generateHeightmap","ShaderMaterial","OrthographicCamera","Scene","quad","Mesh","PlaneBufferGeometry","frustumCulled","factor","Effect","composer","gl","aspect","useMemo","setSize","render","attachArray","Game","PerspectiveCamera","log","shadowMap","Provider","iterations","tolerance","defaultContactMaterial","friction","restitution","gravity","allowSleep","prototype","Object","assign","constructor","renderer","writeBuffer","readBuffer","deltaTime","maskActive","max","texture","_Math","randFloat","renderToScreen","setRenderTarget","clear","data_arr","Float32Array","length","val","DataTexture","RGBFormat","FloatType","needsUpdate","extend","EffectComposer","RenderPass","UnrealBloomPass","FilmPass","App","className","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9551db82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gameOver.b6bfcd79.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tryAgain.9cae2b3e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/brick.eed03f13.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wall.4c0964a4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cross.00397b42.jpg\";","import create from 'zustand';\n\nimport gameOver from '../../assets/sounds/gameOver.mp3';\nimport tryAgain from '../../assets/sounds/tryAgain.mp3';\n\nexport const [useGameStore] = create((set, get) => ({\n  score: 0,\n  balls: 3,\n  inGame: false,\n  ballLaunched: false,\n  currentLevel: 1,\n  launchBall: () => {\n    set(() => ({\n      ballLaunched: true,\n    }));\n  },\n  launchGame: () => {\n    set(() => ({\n      inGame: true,\n    }));\n  },\n  resetGame: () => {\n    set(() => ({\n      balls: 3,\n      score: 0,\n      inGame: false,\n    }));\n  },\n  resetBall: () => set(() => ({ ballLaunched: false })),\n  getRemainingBalls: () => {\n    return get(() => {});\n  },\n  addScore: () => {\n    set((state) => ({ score: state.score + 1 }));\n  },\n  retrieveBall: () => {\n    if (get().balls > 0) {\n      const tryAgainSound = new Audio(tryAgain);\n      tryAgainSound.play();\n    } else {\n      const gameOverSound = new Audio(gameOver);\n      gameOverSound.play();\n    }\n\n    set((state) => ({ balls: state.balls - 1 }));\n  },\n}));\n","import create from 'zustand';\n\nexport const [useLevelStore] = create((set, get) => ({\n  tiles: [],\n  getTiles: () => get().tiles,\n  buildLevel: (tiles) => {\n    set(() => ({ tiles: tiles }));\n  },\n}));\n","import React, { useEffect } from 'react';\n\nimport { useGameStore } from '../data/stores/game';\nimport { useLevelStore } from '../data/stores/level';\n\nimport * as LEVELS from '../data/levels/levels.json';\n\nexport function Welcome() {\n  const { launchGame } = useGameStore((state) => state);\n  const { buildLevel } = useLevelStore();\n\n  useEffect(() => {\n    buildLevel(LEVELS.levels[0].layers.flat());\n  }, [buildLevel]);\n\n  return (\n    <div id=\"welcome\" onClick={launchGame} style={{ margin: 'auto' }}>\n      Click to start\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const GameContext = React.createContext({ glitching: false, setGlitching: () => {} });\n","import React, { useContext, useState } from 'react';\n\nimport * as THREE from 'three';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport { useBox } from 'use-cannon';\n\nimport UIFx from 'uifx';\n\nimport { useGameStore } from '../../data/stores/game';\n\nimport brick from '../../assets/sounds/brick.mp3';\nimport wall from '../../assets/sounds/wall.mp3';\n\nimport { GameContext } from '../../data/game-context';\n\nexport function Box({ position, size = [2, 2, 2], userData, id }) {\n  const { retrieveBall, resetBall } = useGameStore();\n  const { setGlitching } = useContext(GameContext);\n\n  const isWall = isNaN(userData.strength);\n  const isCorner = isNaN(userData.isCorner);\n  const [particleSystem, setParticleSystem] = useState();\n\n  function buildParticleSystem() {\n    // create the particle variables\n    const particleCount = 25;\n    const particles = new THREE.Geometry();\n    const pMaterial = new THREE.PointsMaterial({\n      color: userData.color,\n      size: 0.9,\n      transparent: true,\n      depthTest: false,\n      sizeAttenuation: true,\n      opacity: 0.9,\n    });\n\n    // now create the individual particles\n    for (let p = 0; p < particleCount; p++) {\n      // create a particle with random\n      // position values, -250 -> 250\n      const pX = Math.random() * 2.5 - 1.25 + ref.current.position.x;\n      const pY = Math.random() * 2.5 - 1.25 + ref.current.position.y;\n      const pZ = Math.random() * 2.5 - 1.25 + ref.current.position.z;\n      const particle = new THREE.Vector3(pX, pY, pZ);\n      // add it to the geometry\n      particles.vertices.push(particle);\n    }\n\n    const ps = new THREE.Points(particles, pMaterial);\n    ps.customRotation = Math.random() * 2 - 1;\n    scene.add(ps);\n    return ps;\n  }\n\n  let soundAsset = null;\n  if (isWall) {\n    soundAsset = wall;\n  } else if (!userData.isRoof) {\n    soundAsset = brick;\n  }\n\n  const hitSound = new UIFx(soundAsset);\n\n  const { scene } = useThree();\n\n  const [ref, api] = useBox(() => {\n    return {\n      type: isCorner ? 'Static' : 'Kinematic',\n      args: size.map((x) => x / 2),\n      position,\n      userData: userData,\n      onCollide: (e) => {\n        hitSound.play();\n        if (!isWall) {\n          userData.strength--;\n          api.position.set(-1000, -1000, -100);\n          setParticleSystem(buildParticleSystem());\n        } else if (userData.isRoof) {\n          resetBall();\n          setGlitching(true);\n          setTimeout(() => {\n            setGlitching(false);\n            retrieveBall();\n          }, 300);\n        }\n      },\n    };\n  });\n\n  useFrame(() => {\n    if (particleSystem && particleSystem.material.opacity > 0) {\n      particleSystem.material.opacity -= 0.0075;\n      particleSystem.scale.x += 0.01;\n      particleSystem.scale.y += 0.01;\n      particleSystem.rotation.x += particleSystem.customRotation / 50;\n    }\n  });\n\n  return (\n    <mesh key={id} ref={ref} receiveShadow userData={userData}>\n      <boxGeometry attach=\"geometry\" args={size} />\n      <meshStandardMaterial attach=\"material\" color={userData.color} />\n    </mesh>\n  );\n}\n","import React from 'react';\nimport { Box } from './Box.js';\n\nimport { useLevelStore } from '../../data/stores/level';\nimport { tiles as TILES } from '../../data/gameBalanceData.json';\n\nfunction Tile({ position, userData }) {\n  return <Box position={position} userData={userData} />;\n}\n\nexport function Tiles() {\n  const { getTiles } = useLevelStore();\n  return getTiles().map((brick, i) => (\n    <Tile key={i} position={brick.position} userData={TILES[brick.userDataType]} />\n  ));\n}\n","import React from 'react';\nimport { Box } from './Box.js';\n\nimport * as BRICKS from '../../data/gameBalanceData.json';\n\nexport function Walls() {\n  return (\n    <>\n      <Box position={[-12.5, 0, 0]} userData={BRICKS.walls.side} size={[1, 25, 130]} />\n      <Box position={[12.5, 0, 0]} userData={BRICKS.walls.side} size={[1, 25, 130]} />\n      <Box position={[0, 12.5, 0]} userData={BRICKS.walls.side} size={[25, 1, 130]} />\n      <Box position={[0, -12.5, 0]} userData={BRICKS.walls.side} size={[25, 1, 130]} />\n      <Box\n        position={[0, 0, -12.5]}\n        userData={BRICKS.walls.ground}\n        size={[25, 25, 1]}\n        rotation={Math.PI / 2}\n      />\n\n      <Box\n        position={[-12, -12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[-12, 12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[12, 12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[12, -12, -12.5]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 0.25, 130]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[0, 12, -12]}\n        userData={BRICKS.walls.corner}\n        size={[130, 0.25, 0.25]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[0, -12, -12]}\n        userData={BRICKS.walls.corner}\n        size={[130, 0.25, 0.25]}\n        rotation={Math.PI / 2}\n      />\n      <Box\n        position={[12, 0, -12]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 120, 0.25]}\n        rotation={Math.PI}\n      />\n      <Box\n        position={[-12, 0, -12]}\n        userData={BRICKS.walls.corner}\n        size={[0.25, 120, 0.25]}\n        rotation={Math.PI}\n      />\n      <Box\n        position={[0, 0, 45]}\n        userData={BRICKS.walls.roof}\n        size={[24, 24, 0.001]}\n        rotation={Math.PI / 2}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { useSphere } from 'use-cannon';\nimport { useFrame, useLoader } from 'react-three-fiber';\nimport { useGameStore } from '../../data/stores/game';\nimport * as THREE from 'three';\nimport cross from '../../assets/textures/cross.jpg';\nexport function Ball() {\n  const { ballLaunched } = useGameStore((state) => state);\n  const map = useLoader(THREE.TextureLoader, cross);\n  const [ref, api] = useSphere(() => ({\n    mass: 1,\n    args: 1,\n    position: [0, 0, 0],\n    onCollide: (e) => {},\n  }));\n  useFrame((state) => {\n    if (!ballLaunched) {\n      api.position.set(state.mouse.x * 10, state.mouse.y * 10, 17.6);\n      api.velocity.set(0, 0, 0, 1);\n    }\n  });\n  return (\n    <mesh castShadow receiveShadow ref={ref}>\n      <sphereBufferGeometry attach=\"geometry\" args={[0.5, 64, 64]} />\n      <meshStandardMaterial map={map} attach=\"material\" />\n    </mesh>\n  );\n}\n","import React from 'react';\n\nimport { useFrame } from 'react-three-fiber';\nimport { useSphere } from 'use-cannon';\n\nexport function Paddle() {\n  const [ref, api] = useSphere(() => ({\n    args: 1.3,\n    scale: [1, 1, 0.01],\n    position: [0, 0, 10],\n    sleepSpeedLimit: 4,\n    onCollide: (e) => {},\n  }));\n  function clampMouseMovement(diffCurrentPos, maxVelocity = 1) {\n    const isNeg = diffCurrentPos < 0;\n    let diffToAddX = 0;\n    if (isNeg) {\n      diffToAddX = diffCurrentPos < -maxVelocity ? -maxVelocity : diffCurrentPos;\n    } else {\n      diffToAddX = diffCurrentPos > maxVelocity ? maxVelocity : diffCurrentPos;\n    }\n    return diffToAddX;\n  }\n  useFrame((state) => {\n    // The paddle is kinematic (not subject to gravitation), we move it with the api returned by useBox\n    const currentMousePosX = state.mouse.x * 10;\n    const currentMousePosY = state.mouse.y * 10;\n    const diffCurrentPosX = currentMousePosX - ref.current.position.x;\n    const diffCurrentPosY = currentMousePosY - ref.current.position.y;\n\n    api.position.set(\n      ref.current.position.x + clampMouseMovement(diffCurrentPosX),\n      ref.current.position.y + clampMouseMovement(diffCurrentPosY),\n      18\n    );\n  });\n  return (\n    <>\n      <mesh ref={ref} castShadow>\n        <boxGeometry attach=\"geometry\" args={[5, 5, 1]} />\n        <meshBasicMaterial attach=\"material\" wireframe={true} color={'#FFF'} />\n      </mesh>\n    </>\n  );\n}\n","import React, { useRef, useLayoutEffect } from 'react';\nimport * as THREE from 'three';\nexport function Lights() {\n  const ref = useRef();\n  useLayoutEffect(() => {\n    ref.current.shadow.camera = new THREE.OrthographicCamera(-100, 100, 100, -100, 0.5, 100);\n    ref.current.shadow.mapSize.width = 2048;\n    ref.current.shadow.mapSize.height = 2048;\n  }, []);\n  return (\n    <>\n      <ambientLight intensity={0.75} />\n      <directionalLight\n        ref={ref}\n        position={[0, 0, 25]}\n        shadow-camera-near={0.1}\n        shadow-camera-far={1500}\n        castShadow\n      />\n    </>\n  );\n}\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nimport {\n  DataTexture,\n  FloatType,\n  Math as _Math,\n  Mesh,\n  OrthographicCamera,\n  PlaneBufferGeometry,\n  RGBFormat,\n  Scene,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass.js';\n\nvar DigitalGlitch = {\n  uniforms: {\n    tDiffuse: { value: null }, //diffuse texture\n    tDisp: { value: null }, //displacement texture for digital glitch squares\n    byp: { value: 0 }, //apply the glitch ?\n    amount: { value: 0.08 },\n    angle: { value: 0.02 },\n    seed: { value: 0.02 },\n    seed_x: { value: 0.02 }, //-1,1\n    seed_y: { value: 0.02 }, //-1,1\n    distortion_x: { value: 0.5 },\n    distortion_y: { value: 0.6 },\n    col_s: { value: 0.05 },\n  },\n\n  vertexShader: `varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }`,\n\n  fragmentShader: `uniform int byp; //should we apply the glitch\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDisp;\n    uniform float amount;\n    uniform float angle;\n    uniform float seed;\n    uniform float seed_x;\n    uniform float seed_y;\n    uniform float distortion_x;\n    uniform float distortion_y;\n    uniform float col_s;\n    varying vec2 vUv;\n    float rand(vec2 co){\n      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n    void main() {\n      if(byp<1) {\n        vec2 p = vUv;\n        float xs = floor(gl_FragCoord.x / 0.5);\n        float ys = floor(gl_FragCoord.y / 0.5);\n        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n        vec4 normal = texture2D (tDisp, p*seed*seed);\n        if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\n          if(seed_x>0.){\n            p.y = 1. - (p.y + distortion_y);\n          }\n          else {\n            p.y = distortion_y;\n          }\n        }\n        p.x+=normal.x*seed_x*(seed/5.);\n        p.y+=normal.y*seed_y*(seed/5.);\n        //base from RGB shift shader\n        vec2 offset = amount * vec2( cos(angle), sin(angle));\n        vec4 cr = texture2D(tDiffuse, p + offset);\n        vec4 cga = texture2D(tDiffuse, p);\n        vec4 cb = texture2D(tDiffuse, p - offset);\n        gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        //add noise\n        vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.05);\n        gl_FragColor = gl_FragColor+ snow;\n      }\n      else {\n        gl_FragColor=texture2D (tDiffuse, vUv);\n      }\n    }`,\n};\n\nvar GlitchPass = function (dt_size) {\n  Pass.call(this);\n  if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on THREE.DigitalGlitch');\n  var shader = DigitalGlitch;\n  this.uniforms = UniformsUtils.clone(shader.uniforms);\n  if (dt_size === undefined) dt_size = 64;\n  this.uniforms['tDisp'].value = this.generateHeightmap(dt_size);\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader,\n  });\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this.scene = new Scene();\n  this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null);\n  this.quad.frustumCulled = false; // Avoid getting clipped\n  this.scene.add(this.quad);\n  this.factor = 0;\n};\n\nGlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: GlitchPass,\n\n  render: function (renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    const factor = Math.max(0, this.factor);\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['seed'].value = Math.random() * factor; //default seeding\n    this.uniforms['byp'].value = 0;\n    if (factor) {\n      this.uniforms['amount'].value = (Math.random() / 90) * factor;\n      this.uniforms['angle'].value = _Math.randFloat(-Math.PI, Math.PI) * factor;\n      this.uniforms['distortion_x'].value = _Math.randFloat(0, 1) * factor;\n      this.uniforms['distortion_y'].value = _Math.randFloat(0, 1) * factor;\n      this.uniforms['seed_x'].value = _Math.randFloat(-0.3, 0.3) * factor;\n      this.uniforms['seed_y'].value = _Math.randFloat(-0.3, 0.3) * factor;\n    } else this.uniforms['byp'].value = 1;\n    this.quad.material = this.material;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      renderer.render(this.scene, this.camera);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      renderer.render(this.scene, this.camera);\n    }\n  },\n\n  generateHeightmap: function (dt_size) {\n    var data_arr = new Float32Array(dt_size * dt_size * 3);\n    var length = dt_size * dt_size;\n\n    for (var i = 0; i < length; i++) {\n      var val = _Math.randFloat(0, 1);\n      data_arr[i * 3 + 0] = val;\n      data_arr[i * 3 + 1] = val;\n      data_arr[i * 3 + 2] = val;\n    }\n\n    var texture = new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType);\n    texture.needsUpdate = true;\n    return texture;\n  },\n});\n\nexport { GlitchPass };\n","import React, { useRef, useContext, useMemo, useEffect } from 'react';\nimport { useFrame, useThree, extend } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\n\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\n\nimport { GlitchPass } from './GlitchPass';\nimport { GameContext } from '../../data/game-context';\n\nextend({ EffectComposer, RenderPass, UnrealBloomPass, FilmPass, GlitchPass });\n\nexport function Effect(camera) {\n  const { glitching } = useContext(GameContext);\n  const composer = useRef();\n  const { scene, gl, size } = useThree();\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [size]);\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size]);\n  useFrame(() => composer.current.render(), 1);\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera.camera} />\n      <unrealBloomPass attachArray=\"passes\" args={[aspect, 0.25, 0.2, 0]} />\n      <glitchPass attachArray=\"passes\" factor={glitching ? 1 : 0} />\n      <filmPass attachArray=\"passes\" args={[0.35, 0.6, 1500, false]} />\n    </effectComposer>\n  );\n}\n","import React, { useMemo, useState } from 'react';\n\nimport { Canvas } from 'react-three-fiber';\nimport { Physics } from 'use-cannon';\n\nimport { Tiles } from '../components/game/Tiles';\nimport { Walls } from '../components/game/Walls';\nimport { Ball } from '../components/game/Ball';\nimport { Paddle } from '../components/game/Paddle';\nimport { Lights } from '../components/game/Lights';\nimport { Effect } from '../components/vfx/Effect';\n\nimport { GameContext } from '../data/game-context';\nimport { useGameStore } from '../data/stores/game';\nimport { PerspectiveCamera } from 'three';\n\nexport function Game() {\n  const [glitching, setGlitching] = useState(false);\n  const value = { glitching, setGlitching };\n  const { ballLaunched, launchBall, balls, resetGame, currentLevel } = useGameStore(\n    (state) => state\n  );\n  const camera = useMemo(() => {\n    const camera = new PerspectiveCamera(45, 1, 1, 57);\n    camera.position.set(0, 0, 45);\n    return camera;\n  }, []);\n\n  function handleClick() {\n    if (balls < 0) {\n      resetGame();\n    } else if (!ballLaunched) {\n      launchBall();\n      console.log(glitching);\n    }\n  }\n\n  return (\n    <>\n      <div id=\"game\" onClick={handleClick}>\n        {balls >= 0 ? (\n          <div id=\"canvas\">\n            <Canvas shadowMap camera={camera}>\n              <GameContext.Provider value={value}>\n                <Lights />\n                <Physics\n                  iterations={20}\n                  tolerance={0.0001}\n                  defaultContactMaterial={{\n                    friction: 0,\n                    restitution: 1,\n                  }}\n                  gravity={[0, 0, 0]}\n                  allowSleep={false}\n                >\n                  <Walls />\n                  <Tiles />\n                  <Paddle />\n                  <Ball />\n                  <Effect camera={camera} />\n                </Physics>\n              </GameContext.Provider>\n            </Canvas>\n          </div>\n        ) : (\n          <div>\n            <p>Game Over</p>\n            <p>Click to restart</p>\n          </div>\n        )}\n        <div id=\"hud\">\n          <p>Balls: {balls}</p>\n          <p>Level: {currentLevel}</p>\n          <p onClick={resetGame}>Click to restart</p>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { useGameStore } from './data/stores/game';\n\nimport { Welcome } from './pages/Welcome';\nimport { Game } from './pages/Game';\n\nimport './styles.css';\n\nexport default function App() {\n  const { inGame } = useGameStore((state) => state);\n\n  return <div className=\"main\">{!inGame ? <Welcome /> : <Game />}</div>;\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}